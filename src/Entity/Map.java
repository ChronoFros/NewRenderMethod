package Entity;

import DisplayManager.DisplayManager;
import SpriteSheet.Loader;

public class Map {
	public int width,height;
	DisplayManager manager;
	Loader loader = new Loader();
	
	public char map[][]={
	{1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,9,9,9,0,9,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,9,0,9,0,9,0,9,9,9,9,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,9,9,0,9,9,9,0,9,0,0,0,9,9,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,9,9,0,9,9,9,0,9,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,9,0,9,0,9,0,9,0,0,9,9,9,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,9,9,9,0,9,0,9,9,9,9,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,9,9,9,9,9,9,9,0,0,0,9,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,9,9,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,9,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,},
	{7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,}};
	
	public Map(int width,int height,DisplayManager manager){
		this.width=width;
		this.height=height;
		this.manager=manager;
		Update();
	}
	
	public void Update(){
		for(int x=0;x<map.length;x++){
			for(int y=0;y<map.length;y++){
				if(map[y][x]==0){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(33,33,32,32,"Grass.png")));
				} else if(map[y][x]==1){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(0,0,32,32,"Grass.png")));
				} else if(map[y][x]==2){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(33,0,32,32,"Grass.png")));
				} else if(map[y][x]==3){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(66,0,32,32,"Grass.png")));
				} else if(map[y][x]==4){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(66,33,32,32,"Grass.png")));
				} else if(map[y][x]==5){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(66,66,32,32,"Grass.png")));
				} else if(map[y][x]==6){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(33,66,32,32,"Grass.png")));
				} else if(map[y][x]==7){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(0,66,32,32,"Grass.png")));
				} else if(map[y][x]==8){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(0,33,32,32,"Grass.png")));
				} else if(map[y][x]==9){
					manager.block.add(new Block(x*32+1,y*32+1,loader.Load(33,33,32,32,"Block.png")));
				}
			}
		}
	}
	
	public int TileSize(){
		return manager.block.getFirst().Render().getWidth();
	}
	
	public void Render(){
		for(int i=0;i<manager.block.size();i++){
			for(int x=0;x<manager.block.get(i).Render().getWidth();x++){
				for(int y=0;y<manager.block.get(i).Render().getHeight();y++){
					manager.pixel[x+manager.block.get(i).getX()][y+manager.block.get(i).getY()] = manager.block.get(i).Render().getRGB(x, y);
				}
			}
		}
	}
}
